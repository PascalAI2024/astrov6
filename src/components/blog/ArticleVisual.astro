---
interface Props {
  type: 'black-hole' | 'galaxy' | 'planet' | 'star' | 'nebula';
  class?: string;
}

const { type, class: className = '' } = Astro.props;

const animations = {
  'black-hole': {
    component: 'BlackHoleAnimation',
    class: 'animate-spin-slow'
  },
  'galaxy': {
    component: 'GalaxyAnimation',
    class: 'animate-spiral'
  },
  'planet': {
    component: 'PlanetAnimation',
    class: 'animate-float'
  },
  'star': {
    component: 'StarAnimation',
    class: 'animate-pulse-slow'
  },
  'nebula': {
    component: 'NebulaAnimation',
    class: 'animate-drift'
  }
};

const { component, class: animationClass } = animations[type];
---

<div class:list={['relative w-full aspect-square', className]}>
  {type === 'black-hole' && (
    <div class="absolute inset-0 flex items-center justify-center">
      <div class="relative w-48 h-48">
        <div class="absolute inset-0 bg-black rounded-full">
          <div class="absolute inset-0 bg-gradient-to-r from-purple-600 to-blue-600 opacity-50 rounded-full animate-spin-slow"></div>
        </div>
        <div class="absolute inset-[-2px] border-2 border-purple-500 rounded-full animate-ping-slow"></div>
        <div class="absolute inset-[-4px] border-2 border-blue-500 rounded-full animate-ping-slow delay-200"></div>
      </div>
    </div>
  )}

  {type === 'galaxy' && (
    <div class="absolute inset-0 flex items-center justify-center">
      <div class="relative w-64 h-64">
        {Array.from({ length: 4 }).map((_, i) => (
          <div
            class="absolute inset-0 border-2 border-purple-500 rounded-full"
            style={{
              transform: `rotate(${i * 45}deg)`,
              animation: `spiral ${5 + i}s linear infinite`
            }}
          ></div>
        ))}
        <div class="absolute inset-[25%] bg-gradient-to-br from-purple-600 to-blue-600 rounded-full blur-md"></div>
      </div>
    </div>
  )}

  {type === 'planet' && (
    <div class="absolute inset-0 flex items-center justify-center">
      <div class="relative w-40 h-40 animate-float">
        <div class="absolute inset-0 bg-gradient-to-br from-blue-500 to-green-500 rounded-full"></div>
        <div class="absolute inset-[-8px] border-4 border-gray-300/20 rounded-full rotate-12"></div>
        <div class="absolute inset-0 bg-white/20 rounded-full blur-sm"></div>
      </div>
    </div>
  )}

  {type === 'star' && (
    <div class="absolute inset-0 flex items-center justify-center">
      <div class="relative w-32 h-32">
        <div class="absolute inset-0 bg-yellow-500 rounded-full animate-pulse-slow"></div>
        <div class="absolute inset-[-8px] bg-yellow-400/50 rounded-full blur-md animate-pulse-slow delay-100"></div>
        <div class="absolute inset-[-16px] bg-yellow-300/30 rounded-full blur-lg animate-pulse-slow delay-200"></div>
      </div>
    </div>
  )}

  {type === 'nebula' && (
    <div class="absolute inset-0 flex items-center justify-center">
      <div class="relative w-full h-full">
        <div
          class="absolute inset-0 animate-drift"
          style={{
            background: `
              radial-gradient(circle at 30% 50%, rgba(167, 139, 250, 0.3), transparent 60%),
              radial-gradient(circle at 70% 50%, rgba(139, 92, 246, 0.3), transparent 60%)
            `
          }}
        ></div>
        <div class="absolute inset-0 flex items-center justify-center">
          {Array.from({ length: 20 }).map((_, i) => (
            <div
              class="absolute rounded-full bg-white"
              style={{
                width: `${Math.random() * 3 + 1}px`,
                height: `${Math.random() * 3 + 1}px`,
                top: `${Math.random() * 100}%`,
                left: `${Math.random() * 100}%`,
                animation: `twinkle ${Math.random() * 3 + 2}s infinite ${Math.random() * 2}s`
              }}
            ></div>
          ))}
        </div>
      </div>
    </div>
  )}
</div>

<style>
  @keyframes spiral {
    from { transform: rotate(0deg) scale(1); }
    to { transform: rotate(360deg) scale(0.8); }
  }

  @keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
  }

  @keyframes drift {
    0% { transform: scale(1) rotate(0deg); }
    100% { transform: scale(1.1) rotate(5deg); }
  }

  .animate-spin-slow {
    animation: spin 20s linear infinite;
  }

  .animate-pulse-slow {
    animation: pulse 3s ease-in-out infinite;
  }

  .animate-ping-slow {
    animation: ping 3s cubic-bezier(0, 0, 0.2, 1) infinite;
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .animate-drift {
    animation: drift 20s alternate infinite;
  }

  .delay-200 {
    animation-delay: 200ms;
  }
</style>
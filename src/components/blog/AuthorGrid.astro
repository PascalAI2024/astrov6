---
import { authors } from '../../data/authors';
import { posts } from '../../data/posts';

const authorList = Object.entries(authors).map(([slug, author]) => ({
  ...author,
  slug,
  postCount: posts.filter(post => post.author?.name === author.name).length
}));
---

<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
  {authorList.map(author => (
    <a 
      href={`/authors/${author.slug}`}
      class="group relative bg-gray-800/50 rounded-xl overflow-hidden backdrop-blur-sm border border-white/10 transition-transform hover:scale-[1.02]"
    >
      <div class="absolute inset-0 bg-gradient-to-br from-cosmic-600/20 to-purple-600/20 opacity-0 group-hover:opacity-100 transition-opacity"></div>
      
      <div class="relative p-6">
        <div class="flex items-center gap-4 mb-4">
          <img 
            src={author.avatar} 
            alt={author.name}
            class="w-16 h-16 rounded-full border-2 border-cosmic-200 dark:border-cosmic-700"
            width="64"
            height="64"
          />
          <div>
            <h3 class="font-bold text-xl text-white group-hover:text-cosmic-400 transition-colors">
              {author.name}
            </h3>
            <p class="text-cosmic-400 text-sm">
              {author.postCount} {author.postCount === 1 ? 'article' : 'articles'}
            </p>
          </div>
        </div>
        
        <p class="text-gray-300 text-sm mb-4">
          {author.bio}
        </p>
        
        <div class="text-sm text-gray-400">
          Parody of {author.parodyOf}
        </div>
      </div>
    </a>
  ))}
</div>
---
interface Props {
  type: 'animation' | 'image' | 'diagram';
  variant?: 'black-hole' | 'galaxy' | 'planet' | 'star' | 'nebula' | 'quantum' | 'spacetime';
  caption?: string;
  align?: 'left' | 'right' | 'center';
  size?: 'small' | 'medium' | 'large';
  class?: string;
}

const { 
  type, 
  variant = 'star',
  caption,
  align = 'center',
  size = 'medium',
  class: className = '' 
} = Astro.props;

const sizes = {
  small: 'w-64 h-64',
  medium: 'w-96 h-96',
  large: 'w-full h-[400px]'
};

const alignments = {
  left: 'float-left mr-8 mb-4',
  right: 'float-right ml-8 mb-4',
  center: 'mx-auto my-8'
};
---

<figure class:list={[
  'relative group rounded-xl overflow-hidden bg-gray-900/50 backdrop-blur-sm',
  sizes[size],
  alignments[align],
  className
]}>
  {type === 'animation' && (
    <div class="absolute inset-0">
      {variant === 'black-hole' && (
        <div class="absolute inset-0 flex items-center justify-center">
          <!-- Black Hole Animation -->
          <div class="relative w-3/4 h-3/4">
            <div class="absolute inset-0 rounded-full bg-black">
              <div class="absolute inset-[-25%] animate-spin-slow">
                <div class="absolute inset-0 bg-gradient-to-r from-purple-600 via-blue-600 to-purple-600 opacity-50 rounded-full"></div>
              </div>
            </div>
            <div class="absolute inset-[-10%] border-2 border-purple-500/30 rounded-full animate-ping-slow"></div>
            <div class="absolute inset-[-20%] border border-blue-500/20 rounded-full animate-ping-slow delay-300"></div>
          </div>
        </div>
      )}

      {variant === 'quantum' && (
        <div class="absolute inset-0 flex items-center justify-center">
          <!-- Quantum Superposition Animation -->
          <div class="relative w-3/4 h-3/4">
            {Array.from({ length: 3 }).map((_, i) => (
              <div
                class="absolute inset-0 border-2 border-cosmic-400/30 rounded-full"
                style={{
                  animation: `quantum-orbit ${3 + i}s linear infinite`,
                  transform: `rotate(${i * 120}deg)`
                }}
              >
                <div
                  class="absolute w-4 h-4 bg-cosmic-400 rounded-full"
                  style={{
                    left: '50%',
                    transform: 'translateX(-50%)',
                    animation: `quantum-particle ${2 + i}s ease-in-out infinite`
                  }}
                ></div>
              </div>
            ))}
          </div>
        </div>
      )}

      {variant === 'spacetime' && (
        <div class="absolute inset-0 flex items-center justify-center">
          <!-- Spacetime Grid Animation -->
          <div class="relative w-full h-full">
            <div
              class="absolute inset-0 bg-gradient-to-br from-cosmic-900/20 to-transparent"
              style={{
                animation: 'spacetime-warp 10s ease-in-out infinite'
              }}
            >
              {Array.from({ length: 10 }).map((_, i) => (
                <div
                  class="absolute left-0 right-0 border-t border-cosmic-400/10"
                  style={{
                    top: `${i * 10}%`,
                    transform: `scaleY(${1 + Math.sin(i / 5) * 0.2})`
                  }}
                ></div>
              ))}
              {Array.from({ length: 10 }).map((_, i) => (
                <div
                  class="absolute top-0 bottom-0 border-l border-cosmic-400/10"
                  style={{
                    left: `${i * 10}%`,
                    transform: `scaleX(${1 + Math.cos(i / 5) * 0.2})`
                  }}
                ></div>
              ))}
            </div>
          </div>
        </div>
      )}
    </div>
  )}

  {caption && (
    <figcaption class="absolute bottom-0 left-0 right-0 p-4 bg-gradient-to-t from-gray-900 to-transparent">
      <p class="text-sm text-gray-200 text-center">
        {caption}
      </p>
    </figcaption>
  )}
</figure>

<style>
  @keyframes quantum-orbit {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

  @keyframes quantum-particle {
    0%, 100% { transform: translateX(-50%) translateY(-20px); }
    50% { transform: translateX(-50%) translateY(20px); }
  }

  @keyframes spacetime-warp {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.1) rotate(1deg); }
  }

  .animate-spin-slow {
    animation: spin 20s linear infinite;
  }

  .animate-ping-slow {
    animation: ping 4s cubic-bezier(0, 0, 0.2, 1) infinite;
  }

  .delay-300 {
    animation-delay: 300ms;
  }
</style>
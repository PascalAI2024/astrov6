---
import type { BlogPost } from '../../types/blog';
import BlogCard from './BlogCard.astro';

interface Props {
  currentPost: BlogPost;
  posts: BlogPost[];
}

const { currentPost, posts } = Astro.props;

// Get related posts based on tags and category
const relatedPosts = posts
  .filter(post => post.slug !== currentPost.slug)
  .map(post => ({
    post,
    relevance: [
      ...post.tags.filter(tag => currentPost.tags.includes(tag)),
      post.category === currentPost.category ? post.category : null
    ].filter(Boolean).length
  }))
  .sort((a, b) => b.relevance - a.relevance)
  .slice(0, 3)
  .map(({ post }) => post);
---

{relatedPosts.length > 0 && (
  <section class="mt-16 pt-16 border-t border-gray-200 dark:border-gray-700">
    <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-8">
      Related Articles
    </h2>
    
    <div class="grid md:grid-cols-3 gap-8">
      {relatedPosts.map(post => (
        <BlogCard post={post} />
      ))}
    </div>
  </section>
)}